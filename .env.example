# Configuration for Phishing Email Detection System
# Copy this file to .env and update values as needed

# Flask template folder (relative to project root)
TEMPLATE_FOLDER=website

# Directory containing ham emails for domain extraction (relative to project root)
HAM_DATASET_DIR=dataset/kaggle/ham

# Sender email address for reports
EMAIL_ADDRESS=gachacentral1@gmail.com
EMAIL_PASSWORD=email_password
EMAIL_KEY=dexksasuvacscfwv

# Admin credentials for accessing the web interface
ADMIN_USERNAME=1
ADMIN_PASSWORD=1

# Path to spam words folder (relative to project root)
KEYWORDS_FOLDER=keywords

# Path to consolidated & lemmatized spam words file (relative to project root)
KEYWORDS_CONSOLIDATE_FILE=keywords/lemmatized_keywords.csv


### ----- For Rules Based Detection ----- ###
# Scoring weights for different keyword locations

# score for keywords in sender address (domainchecker.py)
DOMAIN_SUSPICION_SCORE=2 # score for keywords in sender address
DOMAIN_SIMILARITY_THRESHOLD=4 # threshold for similarity in sender address

# Scoring weights for different URL characteristics (suspiciousurl.py)
HIGH_DOMAIN_SCORE=3 # score for domain less than 30 days old
MEDIUM_DOMAIN_SCORE=2 # score for domain between 30 and 120 days old
LOW_DOMAIN_SCORE=1 # score for domain between 120 and 365 days old
HIGH_DOMAIN_EXPIRY_SCORE=2 # score for domain expiring in the next 6 months
LOW_DOMAIN_EXPIRY_SCORE=1 # score for domain expiring next year
DOMAIN_UPDATE_SCORE=1 # score for recently updated domain
IP_ADDRESS_SCORE=2 # score for URLs containing IP address
NO_HTTPS_SCORE=2 # score for URLs without HTTPS
HTTP_SCORE=1 # score for URLs with HTTP instead of HTTPS
LONG_URL_SCORE=1 # score for URLs longer than 75 characters
AT_SYMBOL_SCORE=2 # score for URLs containing '@' symbol
SUBDIR_COUNT_SCORE=1 # score for URLs with more than 4 subdirectories
UNRESOLVED_DOMAIN_SCORE=3 # score for URLs with unresolved domains
# Risk level thresholds for URLs
HIGH_URL_RISK_THRESHOLD=5 # threshold for high risk URLs
MEDIUM_URL_RISK_THRESHOLD=3 # threshold for medium risk URLs
LOW_URL_RISK_THRESHOLD=1 # threshold for low risk URLs

# Scoring weights for different keyword locations (suspiciouswords.py)
SUBJECT_KEYWORD_SCORE=3 # score for keywords in email subject
EARLY_BODY_WORD_COUNT=100 # number of words considered "early" in email body
EARLY_BODY_KEYWORD_SCORE=2 # score for keywords in early words of email body 
BODY_KEYWORD_SCORE=1 # score for keywords in the rest of the email body

# Max for final risk score calculation (website.py)
MAX_DOMAIN_SCORE=5 # maximum score from URLs
MAX_URL_SCORE=6 # maximum score from sender address
MAX_KEYWORD_SCORE=15 # maximum score from keywords

VERY_HIGH_RISK_THRESHOLD=16 # threshold for very high risk emails
HIGH_RISK_THRESHOLD=12 # threshold for high risk emails
MEDIUM_RISK_THRESHOLD=8 # threshold for medium risk emails
LOW_RISK_THRESHOLD=4 # threshold for low risk emails
# VERY_LOW_RISK_THRESHOLD=0 # threshold for very low risk emails --- IGNORE ---

# Threshold to classify email as phishing (website.py)
PHISHING_SCORE=8 # threshold score to classify email as phishing

### ----- For spam words scraping ----- ###

# Source URL for scraping spam words (keyword_scrape_web.py)
SPAM_SOURCE_URL=https://www.activecampaign.com/blog/spam-words

# Path to spam words file (relative to project root) (keyword_scrape_web.py) 
SPAM_WORDS_PATH=keywords/spam_words.txt

# Path to raw spam words data (relative to project root)
KEYWORDS_RAW_FOLDER=keywords/raw_data
 

### ----- For Testing Purposes ----- ###
# Path to a sample email file for testing (relative to project root)
TEST_EMAIL_FILE=dataset/testing/spam/spam_1.txt